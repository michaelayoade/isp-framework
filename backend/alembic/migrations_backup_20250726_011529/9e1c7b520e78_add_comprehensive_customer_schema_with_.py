"""Add comprehensive customer schema with foundation models

Revision ID: 9e1c7b520e78
Revises: 35b46255a705
Create Date: 2025-07-24 07:35:38.932761

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9e1c7b520e78'
down_revision: Union[str, None] = '35b46255a705'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customer_internet_services',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('tariff_id', sa.Integer(), nullable=True),
    sa.Column('service_name', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('router_id', sa.Integer(), nullable=True),
    sa.Column('sector_id', sa.Integer(), nullable=True),
    sa.Column('ipv4_address', sa.String(length=15), nullable=True),
    sa.Column('ipv6_address', sa.String(length=39), nullable=True),
    sa.Column('mac_address', sa.String(length=17), nullable=True),
    sa.Column('download_speed', sa.Integer(), nullable=True),
    sa.Column('upload_speed', sa.Integer(), nullable=True),
    sa.Column('data_limit', sa.Integer(), nullable=True),
    sa.Column('monthly_fee', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('setup_fee', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('discount_percentage', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('connection_type', sa.String(length=50), nullable=True),
    sa.Column('equipment_serial', sa.String(length=100), nullable=True),
    sa.Column('installation_address', sa.Text(), nullable=True),
    sa.Column('custom_fields', sa.JSON(), nullable=True),
    sa.Column('workflow_state', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_customer_internet_services_id'), 'customer_internet_services', ['id'], unique=False)
    op.create_table('file_storage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename_original', sa.String(length=255), nullable=False),
    sa.Column('filename_stored', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('file_hash', sa.String(length=64), nullable=True),
    sa.Column('storage_type', sa.String(length=50), nullable=True),
    sa.Column('storage_bucket', sa.String(length=100), nullable=True),
    sa.Column('storage_region', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('access_level', sa.String(length=50), nullable=True),
    sa.Column('uploaded_by', sa.Integer(), nullable=True),
    sa.Column('uploaded_by_type', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_virus_scanned', sa.Boolean(), nullable=True),
    sa.Column('virus_scan_result', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_accessed', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('filename_stored')
    )
    op.create_index(op.f('ix_file_storage_file_hash'), 'file_storage', ['file_hash'], unique=False)
    op.create_index(op.f('ix_file_storage_id'), 'file_storage', ['id'], unique=False)
    op.create_table('internet_tariffs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('service_name', sa.String(length=255), nullable=True),
    sa.Column('partners_ids', sa.JSON(), nullable=False),
    sa.Column('download_speed', sa.Integer(), nullable=False),
    sa.Column('upload_speed', sa.Integer(), nullable=False),
    sa.Column('data_limit', sa.Integer(), nullable=True),
    sa.Column('price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('setup_fee', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('billing_cycle', sa.String(length=20), nullable=True),
    sa.Column('prorated_billing', sa.Boolean(), nullable=True),
    sa.Column('burst_speed', sa.Integer(), nullable=True),
    sa.Column('burst_threshold', sa.Integer(), nullable=True),
    sa.Column('priority_level', sa.Integer(), nullable=True),
    sa.Column('fup_enabled', sa.Boolean(), nullable=True),
    sa.Column('fup_limit', sa.Integer(), nullable=True),
    sa.Column('fup_speed_down', sa.Integer(), nullable=True),
    sa.Column('fup_speed_up', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('available_from', sa.DateTime(timezone=True), nullable=True),
    sa.Column('available_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('custom_fields', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('service_name'),
    sa.UniqueConstraint('title')
    )
    op.create_index(op.f('ix_internet_tariffs_id'), 'internet_tariffs', ['id'], unique=False)
    op.create_table('partners',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('website', sa.String(length=255), nullable=True),
    sa.Column('address_line_1', sa.String(length=255), nullable=True),
    sa.Column('address_line_2', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state_province', sa.String(length=100), nullable=True),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('business_type', sa.String(length=50), nullable=True),
    sa.Column('tax_id', sa.String(length=100), nullable=True),
    sa.Column('registration_number', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_main_partner', sa.Boolean(), nullable=True),
    sa.Column('framework_config', sa.JSON(), nullable=True),
    sa.Column('ui_customizations', sa.JSON(), nullable=True),
    sa.Column('branding_config', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_partners_code'), 'partners', ['code'], unique=True)
    op.create_index(op.f('ix_partners_id'), 'partners', ['id'], unique=False)
    op.drop_table('customers_extended')
    op.drop_index('ix_customer_billing_config_id', table_name='customer_billing_config')
    op.drop_table('customer_billing_config')
    op.drop_index('ix_customer_label_assignments_id', table_name='customer_label_assignments')
    op.drop_table('customer_label_assignments')
    op.alter_column('administrators', 'username',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.alter_column('administrators', 'hashed_password',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('administrators', 'role',
               existing_type=sa.VARCHAR(length=50),
               nullable=False,
               existing_server_default=sa.text("'admin'::character varying"))
    op.alter_column('administrators', 'permissions',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.drop_constraint('administrators_email_key', 'administrators', type_='unique')
    op.drop_constraint('administrators_username_key', 'administrators', type_='unique')
    op.create_index(op.f('ix_administrators_email'), 'administrators', ['email'], unique=True)
    op.create_index(op.f('ix_administrators_id'), 'administrators', ['id'], unique=False)
    op.create_index(op.f('ix_administrators_username'), 'administrators', ['username'], unique=True)
    op.drop_column('administrators', 'password_hash')
    op.drop_constraint('credit_notes_customer_id_fkey', 'credit_notes', type_='foreignkey')
    op.create_foreign_key(None, 'credit_notes', 'customers', ['customer_id'], ['id'])
    op.drop_constraint('customer_bonus_traffic_counters_service_id_fkey', 'customer_bonus_traffic_counters', type_='foreignkey')
    op.create_foreign_key(None, 'customer_bonus_traffic_counters', 'customer_internet_services', ['service_id'], ['id'], ondelete='CASCADE')
    op.add_column('customer_contacts', sa.Column('receive_notifications', sa.Boolean(), nullable=True))
    op.add_column('customer_contacts', sa.Column('receive_billing', sa.Boolean(), nullable=True))
    op.add_column('customer_contacts', sa.Column('receive_technical', sa.Boolean(), nullable=True))
    op.alter_column('customer_contacts', 'contact_type',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=True)
    op.drop_constraint('customer_contacts_customer_id_fkey', 'customer_contacts', type_='foreignkey')
    op.create_foreign_key(None, 'customer_contacts', 'customers', ['customer_id'], ['id'], ondelete='CASCADE')
    op.drop_column('customer_contacts', 'postal_code')
    op.drop_column('customer_contacts', 'department')
    op.drop_column('customer_contacts', 'address_line_2')
    op.drop_column('customer_contacts', 'address_line_1')
    op.drop_column('customer_contacts', 'notes')
    op.drop_column('customer_contacts', 'state_province')
    op.drop_column('customer_contacts', 'city')
    op.drop_column('customer_contacts', 'is_active')
    op.drop_column('customer_contacts', 'country')
    op.add_column('customer_documents', sa.Column('file_id', sa.Integer(), nullable=False))
    op.add_column('customer_documents', sa.Column('title', sa.String(length=255), nullable=False))
    op.add_column('customer_documents', sa.Column('is_public', sa.Boolean(), nullable=True))
    op.add_column('customer_documents', sa.Column('requires_approval', sa.Boolean(), nullable=True))
    op.add_column('customer_documents', sa.Column('approved_by', sa.Integer(), nullable=True))
    op.add_column('customer_documents', sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True))
    op.drop_constraint('customer_documents_customer_id_fkey', 'customer_documents', type_='foreignkey')
    op.drop_constraint('customer_documents_verified_by_fkey', 'customer_documents', type_='foreignkey')
    op.drop_constraint('customer_documents_uploaded_by_fkey', 'customer_documents', type_='foreignkey')
    op.create_foreign_key(None, 'customer_documents', 'administrators', ['approved_by'], ['id'])
    op.create_foreign_key(None, 'customer_documents', 'customers', ['customer_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'customer_documents', 'file_storage', ['file_id'], ['id'], ondelete='CASCADE')
    op.drop_column('customer_documents', 'mime_type')
    op.drop_column('customer_documents', 'verified_by')
    op.drop_column('customer_documents', 'status')
    op.drop_column('customer_documents', 'verified_at')
    op.drop_column('customer_documents', 'document_name')
    op.drop_column('customer_documents', 'document_date')
    op.drop_column('customer_documents', 'file_path')
    op.drop_column('customer_documents', 'expiry_date')
    op.drop_column('customer_documents', 'uploaded_by')
    op.drop_column('customer_documents', 'is_verified')
    op.drop_column('customer_documents', 'file_size')
    op.add_column('customer_labels', sa.Column('title', sa.String(length=255), nullable=False))
    op.drop_constraint('customer_labels_name_key', 'customer_labels', type_='unique')
    op.drop_column('customer_labels', 'display_name')
    op.drop_column('customer_labels', 'name')
    op.drop_column('customer_labels', 'partner_id')
    op.drop_column('customer_labels', 'is_active')
    op.drop_column('customer_labels', 'priority')
    op.drop_column('customer_labels', 'category')
    op.add_column('customer_notes', sa.Column('is_important', sa.Boolean(), nullable=True))
    op.add_column('customer_notes', sa.Column('created_by_type', sa.String(length=20), nullable=True))
    op.alter_column('customer_notes', 'created_by',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint('customer_notes_customer_id_fkey', 'customer_notes', type_='foreignkey')
    op.create_foreign_key(None, 'customer_notes', 'customers', ['customer_id'], ['id'], ondelete='CASCADE')
    op.drop_column('customer_notes', 'priority')
    op.drop_constraint('customer_traffic_counters_service_id_fkey', 'customer_traffic_counters', type_='foreignkey')
    op.create_foreign_key(None, 'customer_traffic_counters', 'customer_internet_services', ['service_id'], ['id'], ondelete='CASCADE')
    op.add_column('customers', sa.Column('login', sa.String(length=100), nullable=False))
    op.add_column('customers', sa.Column('password_hash', sa.String(length=255), nullable=True))
    op.add_column('customers', sa.Column('partner_id', sa.Integer(), nullable=False))
    op.add_column('customers', sa.Column('location_id', sa.Integer(), nullable=False))
    op.add_column('customers', sa.Column('parent_id', sa.Integer(), nullable=True))
    op.add_column('customers', sa.Column('billing_email', sa.String(length=255), nullable=True))
    op.add_column('customers', sa.Column('category', sa.String(length=20), nullable=True))
    op.add_column('customers', sa.Column('street_1', sa.String(length=255), nullable=True))
    op.add_column('customers', sa.Column('zip_code', sa.String(length=20), nullable=True))
    op.add_column('customers', sa.Column('city', sa.String(length=100), nullable=True))
    op.add_column('customers', sa.Column('subdivision_id', sa.Integer(), nullable=True))
    op.add_column('customers', sa.Column('billing_type', sa.String(length=20), nullable=True))
    op.add_column('customers', sa.Column('mrr_total', sa.Integer(), nullable=True))
    op.add_column('customers', sa.Column('daily_prepaid_cost', sa.Integer(), nullable=True))
    op.add_column('customers', sa.Column('gps', sa.String(length=100), nullable=True))
    op.add_column('customers', sa.Column('date_add', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('customers', sa.Column('conversion_date', sa.DateTime(timezone=True), nullable=True))
    op.add_column('customers', sa.Column('added_by', sa.String(length=20), nullable=True))
    op.add_column('customers', sa.Column('added_by_id', sa.Integer(), nullable=True))
    op.add_column('customers', sa.Column('last_online', sa.DateTime(timezone=True), nullable=True))
    op.add_column('customers', sa.Column('last_update', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('customers', sa.Column('custom_fields', sa.JSON(), nullable=True))
    op.add_column('customers', sa.Column('workflow_state', sa.JSON(), nullable=True))
    op.alter_column('customers', 'status',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'active'::character varying"))
    op.alter_column('customers', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_constraint('customers_email_key', 'customers', type_='unique')
    op.create_index(op.f('ix_customers_email'), 'customers', ['email'], unique=False)
    op.create_index(op.f('ix_customers_id'), 'customers', ['id'], unique=False)
    op.create_index(op.f('ix_customers_login'), 'customers', ['login'], unique=True)
    op.create_foreign_key(None, 'customers', 'partners', ['partner_id'], ['id'])
    op.create_foreign_key(None, 'customers', 'locations', ['location_id'], ['id'])
    op.create_foreign_key(None, 'customers', 'customers', ['parent_id'], ['id'])
    op.drop_column('customers', 'is_main_account')
    op.drop_column('customers', 'account_level')
    op.create_index(op.f('ix_internet_services_id'), 'internet_services', ['id'], unique=False)
    op.create_index(op.f('ix_internet_services_name'), 'internet_services', ['name'], unique=False)
    op.create_foreign_key(None, 'internet_services', 'router_sectors', ['sector_id'], ['id'])
    op.create_foreign_key(None, 'internet_services', 'routers', ['router_id'], ['id'])
    op.create_foreign_key(None, 'internet_services', 'ipv4_networks', ['ip_pool_id'], ['id'])
    op.drop_constraint('invoices_customer_id_fkey', 'invoices', type_='foreignkey')
    op.create_foreign_key(None, 'invoices', 'customers', ['customer_id'], ['id'])
    op.drop_constraint('payments_customer_id_fkey', 'payments', type_='foreignkey')
    op.create_foreign_key(None, 'payments', 'customers', ['customer_id'], ['id'])
    op.add_column('portal_id_history', sa.Column('partner_id', sa.Integer(), nullable=True))
    op.drop_constraint('portal_id_history_customer_id_fkey', 'portal_id_history', type_='foreignkey')
    op.drop_column('portal_id_history', 'customer_id')
    op.create_index(op.f('ix_voice_services_id'), 'voice_services', ['id'], unique=False)
    op.create_index(op.f('ix_voice_services_name'), 'voice_services', ['name'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_voice_services_name'), table_name='voice_services')
    op.drop_index(op.f('ix_voice_services_id'), table_name='voice_services')
    op.add_column('portal_id_history', sa.Column('customer_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('portal_id_history_customer_id_fkey', 'portal_id_history', 'customers_extended', ['customer_id'], ['id'], ondelete='CASCADE')
    op.drop_column('portal_id_history', 'partner_id')
    op.drop_constraint(None, 'payments', type_='foreignkey')
    op.create_foreign_key('payments_customer_id_fkey', 'payments', 'customers_extended', ['customer_id'], ['id'])
    op.drop_constraint(None, 'invoices', type_='foreignkey')
    op.create_foreign_key('invoices_customer_id_fkey', 'invoices', 'customers_extended', ['customer_id'], ['id'])
    op.drop_constraint(None, 'internet_services', type_='foreignkey')
    op.drop_constraint(None, 'internet_services', type_='foreignkey')
    op.drop_constraint(None, 'internet_services', type_='foreignkey')
    op.drop_index(op.f('ix_internet_services_name'), table_name='internet_services')
    op.drop_index(op.f('ix_internet_services_id'), table_name='internet_services')
    op.add_column('customers', sa.Column('account_level', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=True))
    op.add_column('customers', sa.Column('is_main_account', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'customers', type_='foreignkey')
    op.drop_constraint(None, 'customers', type_='foreignkey')
    op.drop_constraint(None, 'customers', type_='foreignkey')
    op.drop_index(op.f('ix_customers_login'), table_name='customers')
    op.drop_index(op.f('ix_customers_id'), table_name='customers')
    op.drop_index(op.f('ix_customers_email'), table_name='customers')
    op.create_unique_constraint('customers_email_key', 'customers', ['email'])
    op.alter_column('customers', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('customers', 'status',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True,
               existing_server_default=sa.text("'active'::character varying"))
    op.drop_column('customers', 'workflow_state')
    op.drop_column('customers', 'custom_fields')
    op.drop_column('customers', 'last_update')
    op.drop_column('customers', 'last_online')
    op.drop_column('customers', 'added_by_id')
    op.drop_column('customers', 'added_by')
    op.drop_column('customers', 'conversion_date')
    op.drop_column('customers', 'date_add')
    op.drop_column('customers', 'gps')
    op.drop_column('customers', 'daily_prepaid_cost')
    op.drop_column('customers', 'mrr_total')
    op.drop_column('customers', 'billing_type')
    op.drop_column('customers', 'subdivision_id')
    op.drop_column('customers', 'city')
    op.drop_column('customers', 'zip_code')
    op.drop_column('customers', 'street_1')
    op.drop_column('customers', 'category')
    op.drop_column('customers', 'billing_email')
    op.drop_column('customers', 'parent_id')
    op.drop_column('customers', 'location_id')
    op.drop_column('customers', 'partner_id')
    op.drop_column('customers', 'password_hash')
    op.drop_column('customers', 'login')
    op.drop_constraint(None, 'customer_traffic_counters', type_='foreignkey')
    op.create_foreign_key('customer_traffic_counters_service_id_fkey', 'customer_traffic_counters', 'internet_services', ['service_id'], ['id'], ondelete='CASCADE')
    op.add_column('customer_notes', sa.Column('priority', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'customer_notes', type_='foreignkey')
    op.create_foreign_key('customer_notes_customer_id_fkey', 'customer_notes', 'customers_extended', ['customer_id'], ['id'])
    op.alter_column('customer_notes', 'created_by',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('customer_notes', 'created_by_type')
    op.drop_column('customer_notes', 'is_important')
    op.add_column('customer_labels', sa.Column('category', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('customer_labels', sa.Column('priority', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('customer_labels', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('customer_labels', sa.Column('partner_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('customer_labels', sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('customer_labels', sa.Column('display_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.create_unique_constraint('customer_labels_name_key', 'customer_labels', ['name'])
    op.drop_column('customer_labels', 'title')
    op.add_column('customer_documents', sa.Column('file_size', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('customer_documents', sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('customer_documents', sa.Column('uploaded_by', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('customer_documents', sa.Column('expiry_date', sa.DATE(), autoincrement=False, nullable=True))
    op.add_column('customer_documents', sa.Column('file_path', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.add_column('customer_documents', sa.Column('document_date', sa.DATE(), autoincrement=False, nullable=True))
    op.add_column('customer_documents', sa.Column('document_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('customer_documents', sa.Column('verified_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('customer_documents', sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.add_column('customer_documents', sa.Column('verified_by', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('customer_documents', sa.Column('mime_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'customer_documents', type_='foreignkey')
    op.drop_constraint(None, 'customer_documents', type_='foreignkey')
    op.drop_constraint(None, 'customer_documents', type_='foreignkey')
    op.create_foreign_key('customer_documents_uploaded_by_fkey', 'customer_documents', 'administrators', ['uploaded_by'], ['id'])
    op.create_foreign_key('customer_documents_verified_by_fkey', 'customer_documents', 'administrators', ['verified_by'], ['id'])
    op.create_foreign_key('customer_documents_customer_id_fkey', 'customer_documents', 'customers_extended', ['customer_id'], ['id'])
    op.drop_column('customer_documents', 'approved_at')
    op.drop_column('customer_documents', 'approved_by')
    op.drop_column('customer_documents', 'requires_approval')
    op.drop_column('customer_documents', 'is_public')
    op.drop_column('customer_documents', 'title')
    op.drop_column('customer_documents', 'file_id')
    op.add_column('customer_contacts', sa.Column('country', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('customer_contacts', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('customer_contacts', sa.Column('city', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('customer_contacts', sa.Column('state_province', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('customer_contacts', sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('customer_contacts', sa.Column('address_line_1', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('customer_contacts', sa.Column('address_line_2', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('customer_contacts', sa.Column('department', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('customer_contacts', sa.Column('postal_code', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'customer_contacts', type_='foreignkey')
    op.create_foreign_key('customer_contacts_customer_id_fkey', 'customer_contacts', 'customers_extended', ['customer_id'], ['id'])
    op.alter_column('customer_contacts', 'contact_type',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
    op.drop_column('customer_contacts', 'receive_technical')
    op.drop_column('customer_contacts', 'receive_billing')
    op.drop_column('customer_contacts', 'receive_notifications')
    op.drop_constraint(None, 'customer_bonus_traffic_counters', type_='foreignkey')
    op.create_foreign_key('customer_bonus_traffic_counters_service_id_fkey', 'customer_bonus_traffic_counters', 'internet_services', ['service_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'credit_notes', type_='foreignkey')
    op.create_foreign_key('credit_notes_customer_id_fkey', 'credit_notes', 'customers_extended', ['customer_id'], ['id'])
    op.add_column('administrators', sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_administrators_username'), table_name='administrators')
    op.drop_index(op.f('ix_administrators_id'), table_name='administrators')
    op.drop_index(op.f('ix_administrators_email'), table_name='administrators')
    op.create_unique_constraint('administrators_username_key', 'administrators', ['username'])
    op.create_unique_constraint('administrators_email_key', 'administrators', ['email'])
    op.alter_column('administrators', 'permissions',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('administrators', 'role',
               existing_type=sa.VARCHAR(length=50),
               nullable=True,
               existing_server_default=sa.text("'admin'::character varying"))
    op.alter_column('administrators', 'hashed_password',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('administrators', 'username',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.create_table('customer_label_assignments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('customer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('label_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('assigned_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('assigned_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['assigned_by'], ['administrators.id'], name='customer_label_assignments_assigned_by_fkey'),
    sa.ForeignKeyConstraint(['customer_id'], ['customers_extended.id'], name='customer_label_assignments_customer_id_fkey'),
    sa.ForeignKeyConstraint(['label_id'], ['customer_labels.id'], name='customer_label_assignments_label_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='customer_label_assignments_pkey')
    )
    op.create_index('ix_customer_label_assignments_id', 'customer_label_assignments', ['id'], unique=False)
    op.create_table('customer_billing_config',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('customer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('billing_cycle', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('billing_day', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('invoice_template', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('payment_terms', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('late_fee_percentage', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('grace_period_days', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('credit_limit', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('credit_check_required', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('auto_suspend_on_overdue', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('default_discount_percentage', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('loyalty_discount_eligible', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('tax_exempt', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('tax_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('tax_rate_override', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers_extended.id'], name='customer_billing_config_customer_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='customer_billing_config_pkey'),
    sa.UniqueConstraint('customer_id', name='customer_billing_config_customer_id_key')
    )
    op.create_index('ix_customer_billing_config_id', 'customer_billing_config', ['id'], unique=False)
    op.create_table('customers_extended',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('customer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('login', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('portal_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], name='customers_extended_customer_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='customers_extended_pkey'),
    sa.UniqueConstraint('customer_id', name='customers_extended_customer_id_key'),
    sa.UniqueConstraint('login', name='customers_extended_login_key'),
    sa.UniqueConstraint('portal_id', name='customers_extended_portal_id_key')
    )
    op.drop_index(op.f('ix_partners_id'), table_name='partners')
    op.drop_index(op.f('ix_partners_code'), table_name='partners')
    op.drop_table('partners')
    op.drop_index(op.f('ix_internet_tariffs_id'), table_name='internet_tariffs')
    op.drop_table('internet_tariffs')
    op.drop_index(op.f('ix_file_storage_id'), table_name='file_storage')
    op.drop_index(op.f('ix_file_storage_file_hash'), table_name='file_storage')
    op.drop_table('file_storage')
    op.drop_index(op.f('ix_customer_internet_services_id'), table_name='customer_internet_services')
    op.drop_table('customer_internet_services')
    # ### end Alembic commands ###
