"""add_billing_system_tables

Revision ID: 35b46255a705
Revises: 4db3f05bfae9
Create Date: 2025-07-24 00:12:03.592395

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '35b46255a705'
down_revision: Union[str, None] = '4db3f05bfae9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('billing_cycles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cycle_name', sa.String(length=100), nullable=False),
    sa.Column('cycle_type', sa.String(length=20), nullable=False),
    sa.Column('cycle_day', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('due_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('invoices_generated', sa.Boolean(), nullable=True),
    sa.Column('generation_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('total_customers', sa.Integer(), nullable=True),
    sa.Column('total_invoices', sa.Integer(), nullable=True),
    sa.Column('total_amount', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('additional_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_billing_cycles_id'), 'billing_cycles', ['id'], unique=False)
    op.create_table('tax_rates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('rate', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('country', sa.String(length=2), nullable=True),
    sa.Column('state_province', sa.String(length=50), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('effective_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expiry_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('tax_type', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tax_rates_id'), 'tax_rates', ['id'], unique=False)
    op.create_table('invoices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('invoice_number', sa.String(length=50), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('invoice_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('due_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('billing_period_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('billing_period_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('subtotal', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('tax_amount', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('discount_amount', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('total_amount', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('paid_amount', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('balance_due', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'PENDING', 'SENT', 'PAID', 'OVERDUE', 'CANCELLED', 'REFUNDED', name='invoicestatus'), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('tax_rate', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('terms_and_conditions', sa.Text(), nullable=True),
    sa.Column('sent_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('paid_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('template_id', sa.Integer(), nullable=True),
    sa.Column('billing_cycle_id', sa.Integer(), nullable=True),
    sa.Column('parent_invoice_id', sa.Integer(), nullable=True),
    sa.Column('additional_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers_extended.id'], ),
    sa.ForeignKeyConstraint(['parent_invoice_id'], ['invoices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_invoices_due_date'), 'invoices', ['due_date'], unique=False)
    op.create_index(op.f('ix_invoices_id'), 'invoices', ['id'], unique=False)
    op.create_index(op.f('ix_invoices_invoice_date'), 'invoices', ['invoice_date'], unique=False)
    op.create_index(op.f('ix_invoices_invoice_number'), 'invoices', ['invoice_number'], unique=True)
    op.create_index(op.f('ix_invoices_status'), 'invoices', ['status'], unique=False)
    op.create_table('credit_notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('credit_note_number', sa.String(length=50), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('credit_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('reason', sa.Enum('REFUND', 'DISCOUNT', 'ERROR_CORRECTION', 'SERVICE_CREDIT', 'GOODWILL', 'OTHER', name='creditnotereason'), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('applied_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('approved_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('additional_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['administrators.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers_extended.id'], ),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_credit_notes_credit_date'), 'credit_notes', ['credit_date'], unique=False)
    op.create_index(op.f('ix_credit_notes_credit_note_number'), 'credit_notes', ['credit_note_number'], unique=True)
    op.create_index(op.f('ix_credit_notes_id'), 'credit_notes', ['id'], unique=False)
    op.create_index(op.f('ix_credit_notes_reason'), 'credit_notes', ['reason'], unique=False)
    op.create_index(op.f('ix_credit_notes_status'), 'credit_notes', ['status'], unique=False)
    op.create_table('invoice_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('item_type', sa.String(length=50), nullable=True),
    sa.Column('service_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.DECIMAL(precision=10, scale=4), nullable=False),
    sa.Column('unit_price', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('discount_percentage', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('discount_amount', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('line_total', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('taxable', sa.Boolean(), nullable=True),
    sa.Column('tax_rate', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('tax_amount', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('period_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('period_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('additional_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_invoice_items_id'), 'invoice_items', ['id'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payment_number', sa.String(length=50), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('payment_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('payment_method', sa.Enum('CASH', 'BANK_TRANSFER', 'CREDIT_CARD', 'DEBIT_CARD', 'PAYPAL', 'STRIPE', 'CHECK', 'OTHER', name='paymentmethod'), nullable=False),
    sa.Column('payment_reference', sa.String(length=100), nullable=True),
    sa.Column('transaction_id', sa.String(length=100), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'COMPLETED', 'FAILED', 'CANCELLED', 'REFUNDED', name='paymentstatus'), nullable=False),
    sa.Column('processed_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('processor_response', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('receipt_url', sa.String(length=500), nullable=True),
    sa.Column('processing_fee', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('net_amount', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('additional_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers_extended.id'], ),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payments_id'), 'payments', ['id'], unique=False)
    op.create_index(op.f('ix_payments_payment_date'), 'payments', ['payment_date'], unique=False)
    op.create_index(op.f('ix_payments_payment_method'), 'payments', ['payment_method'], unique=False)
    op.create_index(op.f('ix_payments_payment_number'), 'payments', ['payment_number'], unique=True)
    op.create_index(op.f('ix_payments_status'), 'payments', ['status'], unique=False)
    op.create_table('accounting_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entry_number', sa.String(length=50), nullable=False),
    sa.Column('entry_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=True),
    sa.Column('payment_id', sa.Integer(), nullable=True),
    sa.Column('credit_note_id', sa.Integer(), nullable=True),
    sa.Column('account_code', sa.String(length=20), nullable=False),
    sa.Column('account_name', sa.String(length=100), nullable=False),
    sa.Column('debit_amount', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('credit_amount', sa.DECIMAL(precision=12, scale=2), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('reference_number', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('additional_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['credit_note_id'], ['credit_notes.id'], ),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_accounting_entries_account_code'), 'accounting_entries', ['account_code'], unique=False)
    op.create_index(op.f('ix_accounting_entries_entry_date'), 'accounting_entries', ['entry_date'], unique=False)
    op.create_index(op.f('ix_accounting_entries_entry_number'), 'accounting_entries', ['entry_number'], unique=True)
    op.create_index(op.f('ix_accounting_entries_id'), 'accounting_entries', ['id'], unique=False)
    op.create_table('payment_refunds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('refund_number', sa.String(length=50), nullable=False),
    sa.Column('refund_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('reason', sa.String(length=200), nullable=True),
    sa.Column('processed_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('processor_response', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'COMPLETED', 'FAILED', 'CANCELLED', 'REFUNDED', name='paymentstatus'), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payment_refunds_id'), 'payment_refunds', ['id'], unique=False)
    op.create_index(op.f('ix_payment_refunds_refund_date'), 'payment_refunds', ['refund_date'], unique=False)
    op.create_index(op.f('ix_payment_refunds_refund_number'), 'payment_refunds', ['refund_number'], unique=True)
    op.add_column('administrators', sa.Column('full_name', sa.String(length=255), nullable=True))
    op.add_column('administrators', sa.Column('hashed_password', sa.String(length=255), nullable=False))
    op.add_column('administrators', sa.Column('is_superuser', sa.Boolean(), nullable=True))
    op.add_column('administrators', sa.Column('role', sa.String(length=50), nullable=False))
    op.add_column('administrators', sa.Column('permissions', sa.JSON(), nullable=True))
    op.add_column('administrators', sa.Column('last_login', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('administrators', 'username',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.drop_constraint('administrators_email_key', 'administrators', type_='unique')
    op.drop_constraint('administrators_username_key', 'administrators', type_='unique')
    op.create_index(op.f('ix_administrators_email'), 'administrators', ['email'], unique=True)
    op.create_index(op.f('ix_administrators_id'), 'administrators', ['id'], unique=False)
    op.create_index(op.f('ix_administrators_username'), 'administrators', ['username'], unique=True)
    op.drop_column('administrators', 'password_hash')
    op.add_column('customers', sa.Column('address', sa.String(length=500), nullable=True))
    op.alter_column('customers', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('customers', 'status',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'active'::character varying"))
    op.drop_constraint('customers_email_key', 'customers', type_='unique')
    op.create_index(op.f('ix_customers_email'), 'customers', ['email'], unique=True)
    op.create_index(op.f('ix_customers_id'), 'customers', ['id'], unique=False)
    op.drop_column('customers', 'account_level')
    op.drop_column('customers', 'is_main_account')
    op.add_column('customers_extended', sa.Column('status', sa.String(length=20), nullable=True))
    op.add_column('customers_extended', sa.Column('name', sa.String(length=255), nullable=False))
    op.add_column('customers_extended', sa.Column('email', sa.String(length=255), nullable=True))
    op.add_column('customers_extended', sa.Column('phone', sa.String(length=50), nullable=True))
    op.add_column('customers_extended', sa.Column('category', sa.String(length=20), nullable=True))
    op.add_column('customers_extended', sa.Column('address_line_1', sa.String(length=255), nullable=True))
    op.add_column('customers_extended', sa.Column('address_line_2', sa.String(length=255), nullable=True))
    op.add_column('customers_extended', sa.Column('city', sa.String(length=100), nullable=True))
    op.add_column('customers_extended', sa.Column('state_province', sa.String(length=100), nullable=True))
    op.add_column('customers_extended', sa.Column('postal_code', sa.String(length=20), nullable=True))
    op.add_column('customers_extended', sa.Column('country', sa.String(length=100), nullable=True))
    op.add_column('customers_extended', sa.Column('billing_type', sa.String(length=20), nullable=True))
    op.add_column('customers_extended', sa.Column('billing_day', sa.Integer(), nullable=True))
    op.add_column('customers_extended', sa.Column('payment_method', sa.String(length=50), nullable=True))
    op.add_column('customers_extended', sa.Column('credit_limit', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('customers_extended', sa.Column('current_balance', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('customers_extended', sa.Column('parent_customer_id', sa.Integer(), nullable=True))
    op.add_column('customers_extended', sa.Column('is_main_account', sa.Boolean(), nullable=True))
    op.add_column('customers_extended', sa.Column('account_level', sa.Integer(), nullable=True))
    op.add_column('customers_extended', sa.Column('partner_id', sa.Integer(), nullable=True))
    op.add_column('customers_extended', sa.Column('location_id', sa.Integer(), nullable=True))
    op.add_column('customers_extended', sa.Column('labels', sa.JSON(), nullable=True))
    op.add_column('customers_extended', sa.Column('tags', sa.String(length=500), nullable=True))
    op.add_column('customers_extended', sa.Column('date_of_birth', sa.Date(), nullable=True))
    op.add_column('customers_extended', sa.Column('gender', sa.String(length=10), nullable=True))
    op.add_column('customers_extended', sa.Column('occupation', sa.String(length=100), nullable=True))
    op.add_column('customers_extended', sa.Column('company_registration', sa.String(length=100), nullable=True))
    op.add_column('customers_extended', sa.Column('tax_id', sa.String(length=50), nullable=True))
    op.add_column('customers_extended', sa.Column('preferred_language', sa.String(length=10), nullable=True))
    op.add_column('customers_extended', sa.Column('communication_method', sa.String(length=20), nullable=True))
    op.add_column('customers_extended', sa.Column('marketing_consent', sa.Boolean(), nullable=True))
    op.add_column('customers_extended', sa.Column('auto_payment', sa.Boolean(), nullable=True))
    op.add_column('customers_extended', sa.Column('invoice_delivery', sa.String(length=20), nullable=True))
    op.add_column('customers_extended', sa.Column('notification_preferences', sa.JSON(), nullable=True))
    op.add_column('customers_extended', sa.Column('custom_fields', sa.JSON(), nullable=True))
    op.add_column('customers_extended', sa.Column('last_login', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('customers_extended', 'login',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.drop_constraint('customers_extended_customer_id_key', 'customers_extended', type_='unique')
    op.drop_constraint('customers_extended_login_key', 'customers_extended', type_='unique')
    op.drop_constraint('customers_extended_portal_id_key', 'customers_extended', type_='unique')
    op.create_index(op.f('ix_customers_extended_email'), 'customers_extended', ['email'], unique=True)
    op.create_index(op.f('ix_customers_extended_id'), 'customers_extended', ['id'], unique=False)
    op.create_index(op.f('ix_customers_extended_login'), 'customers_extended', ['login'], unique=True)
    op.drop_constraint('customers_extended_customer_id_fkey', 'customers_extended', type_='foreignkey')
    op.create_foreign_key(None, 'customers_extended', 'customers_extended', ['parent_customer_id'], ['id'])
    op.drop_column('customers_extended', 'portal_id')
    op.drop_column('customers_extended', 'customer_id')

    op.add_column('portal_id_history', sa.Column('partner_id', sa.Integer(), nullable=True))
    op.drop_constraint('portal_id_history_customer_id_fkey', 'portal_id_history', type_='foreignkey')
    op.drop_column('portal_id_history', 'customer_id')
    op.create_index(op.f('ix_voice_services_id'), 'voice_services', ['id'], unique=False)
    op.create_index(op.f('ix_voice_services_name'), 'voice_services', ['name'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_voice_services_name'), table_name='voice_services')
    op.drop_index(op.f('ix_voice_services_id'), table_name='voice_services')
    op.add_column('portal_id_history', sa.Column('customer_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('portal_id_history_customer_id_fkey', 'portal_id_history', 'customers_extended', ['customer_id'], ['id'], ondelete='CASCADE')
    op.drop_column('portal_id_history', 'partner_id')

    op.add_column('customers_extended', sa.Column('customer_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('customers_extended', sa.Column('portal_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'customers_extended', type_='foreignkey')
    op.create_foreign_key('customers_extended_customer_id_fkey', 'customers_extended', 'customers', ['customer_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_customers_extended_login'), table_name='customers_extended')
    op.drop_index(op.f('ix_customers_extended_id'), table_name='customers_extended')
    op.drop_index(op.f('ix_customers_extended_email'), table_name='customers_extended')
    op.create_unique_constraint('customers_extended_portal_id_key', 'customers_extended', ['portal_id'])
    op.create_unique_constraint('customers_extended_login_key', 'customers_extended', ['login'])
    op.create_unique_constraint('customers_extended_customer_id_key', 'customers_extended', ['customer_id'])
    op.alter_column('customers_extended', 'login',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.drop_column('customers_extended', 'last_login')
    op.drop_column('customers_extended', 'custom_fields')
    op.drop_column('customers_extended', 'notification_preferences')
    op.drop_column('customers_extended', 'invoice_delivery')
    op.drop_column('customers_extended', 'auto_payment')
    op.drop_column('customers_extended', 'marketing_consent')
    op.drop_column('customers_extended', 'communication_method')
    op.drop_column('customers_extended', 'preferred_language')
    op.drop_column('customers_extended', 'tax_id')
    op.drop_column('customers_extended', 'company_registration')
    op.drop_column('customers_extended', 'occupation')
    op.drop_column('customers_extended', 'gender')
    op.drop_column('customers_extended', 'date_of_birth')
    op.drop_column('customers_extended', 'tags')
    op.drop_column('customers_extended', 'labels')
    op.drop_column('customers_extended', 'location_id')
    op.drop_column('customers_extended', 'partner_id')
    op.drop_column('customers_extended', 'account_level')
    op.drop_column('customers_extended', 'is_main_account')
    op.drop_column('customers_extended', 'parent_customer_id')
    op.drop_column('customers_extended', 'current_balance')
    op.drop_column('customers_extended', 'credit_limit')
    op.drop_column('customers_extended', 'payment_method')
    op.drop_column('customers_extended', 'billing_day')
    op.drop_column('customers_extended', 'billing_type')
    op.drop_column('customers_extended', 'country')
    op.drop_column('customers_extended', 'postal_code')
    op.drop_column('customers_extended', 'state_province')
    op.drop_column('customers_extended', 'city')
    op.drop_column('customers_extended', 'address_line_2')
    op.drop_column('customers_extended', 'address_line_1')
    op.drop_column('customers_extended', 'category')
    op.drop_column('customers_extended', 'phone')
    op.drop_column('customers_extended', 'email')
    op.drop_column('customers_extended', 'name')
    op.drop_column('customers_extended', 'status')
    op.add_column('customers', sa.Column('is_main_account', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True))
    op.add_column('customers', sa.Column('account_level', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_customers_id'), table_name='customers')
    op.drop_index(op.f('ix_customers_email'), table_name='customers')
    op.create_unique_constraint('customers_email_key', 'customers', ['email'])
    op.alter_column('customers', 'status',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True,
               existing_server_default=sa.text("'active'::character varying"))
    op.alter_column('customers', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.drop_column('customers', 'address')
    op.add_column('administrators', sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_administrators_username'), table_name='administrators')
    op.drop_index(op.f('ix_administrators_id'), table_name='administrators')
    op.drop_index(op.f('ix_administrators_email'), table_name='administrators')
    op.create_unique_constraint('administrators_username_key', 'administrators', ['username'])
    op.create_unique_constraint('administrators_email_key', 'administrators', ['email'])
    op.alter_column('administrators', 'username',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.drop_column('administrators', 'last_login')
    op.drop_column('administrators', 'permissions')
    op.drop_column('administrators', 'role')
    op.drop_column('administrators', 'is_superuser')
    op.drop_column('administrators', 'hashed_password')
    op.drop_column('administrators', 'full_name')
    op.drop_index(op.f('ix_payment_refunds_refund_number'), table_name='payment_refunds')
    op.drop_index(op.f('ix_payment_refunds_refund_date'), table_name='payment_refunds')
    op.drop_index(op.f('ix_payment_refunds_id'), table_name='payment_refunds')
    op.drop_table('payment_refunds')
    op.drop_index(op.f('ix_accounting_entries_id'), table_name='accounting_entries')
    op.drop_index(op.f('ix_accounting_entries_entry_number'), table_name='accounting_entries')
    op.drop_index(op.f('ix_accounting_entries_entry_date'), table_name='accounting_entries')
    op.drop_index(op.f('ix_accounting_entries_account_code'), table_name='accounting_entries')
    op.drop_table('accounting_entries')
    op.drop_index(op.f('ix_payments_status'), table_name='payments')
    op.drop_index(op.f('ix_payments_payment_number'), table_name='payments')
    op.drop_index(op.f('ix_payments_payment_method'), table_name='payments')
    op.drop_index(op.f('ix_payments_payment_date'), table_name='payments')
    op.drop_index(op.f('ix_payments_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_invoice_items_id'), table_name='invoice_items')
    op.drop_table('invoice_items')
    op.drop_index(op.f('ix_credit_notes_status'), table_name='credit_notes')
    op.drop_index(op.f('ix_credit_notes_reason'), table_name='credit_notes')
    op.drop_index(op.f('ix_credit_notes_id'), table_name='credit_notes')
    op.drop_index(op.f('ix_credit_notes_credit_note_number'), table_name='credit_notes')
    op.drop_index(op.f('ix_credit_notes_credit_date'), table_name='credit_notes')
    op.drop_table('credit_notes')
    op.drop_index(op.f('ix_invoices_status'), table_name='invoices')
    op.drop_index(op.f('ix_invoices_invoice_number'), table_name='invoices')
    op.drop_index(op.f('ix_invoices_invoice_date'), table_name='invoices')
    op.drop_index(op.f('ix_invoices_id'), table_name='invoices')
    op.drop_index(op.f('ix_invoices_due_date'), table_name='invoices')
    op.drop_table('invoices')
    op.drop_index(op.f('ix_tax_rates_id'), table_name='tax_rates')
    op.drop_table('tax_rates')
    op.drop_index(op.f('ix_billing_cycles_id'), table_name='billing_cycles')
    op.drop_table('billing_cycles')
    # ### end Alembic commands ###
